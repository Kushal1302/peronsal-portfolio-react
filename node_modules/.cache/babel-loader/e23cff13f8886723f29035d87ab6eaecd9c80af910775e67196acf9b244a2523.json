{"ast":null,"code":"var _jsxFileName = \"D:\\\\NewProjectReact\\\\newsite\\\\src\\\\Project.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from './Card';\n// import data from './data'\nimport { getRepo } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s();\n  const [repo, setRepo] = useState([]);\n  useEffect(() => {\n    getUserRepo();\n  }, []);\n  const getUserRepo = async () => {\n    let response = await getRepo();\n    setRepo(response);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Our Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-10 mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row gy-3\",\n            children: repo.map(val => {\n              /*#__PURE__*/_jsxDEV(Card, {\n                title: val.name,\n                desc: val.desc,\n                link: val.html_url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 29\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Project, \"sclefuXybHwATtjnSQRQRnATCaM=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useEffect","useState","Card","getRepo","jsxDEV","_jsxDEV","Fragment","_Fragment","Project","_s","repo","setRepo","getUserRepo","response","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","val","title","name","desc","link","html_url","_c","$RefreshReg$"],"sources":["D:/NewProjectReact/newsite/src/Project.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Card from './Card';\r\n// import data from './data'\r\nimport {getRepo} from './api'\r\nconst Project = () =>{\r\n    const [repo , setRepo] = useState([])\r\n    useEffect(() => {\r\n           getUserRepo()\r\n    },[])\r\n    const getUserRepo = async () => {\r\n        let response  = await getRepo()\r\n        setRepo(response)\r\n    }\r\n    return (<>\r\n    <div className=\"text-center\">\r\n        <h1>Our Projects</h1>\r\n    </div>\r\n    <div className=\" mb-5\">\r\n        <div className=\"row\">\r\n            <div className=\"col-10 mx-auto\">\r\n                <div className=\"row gy-3\">\r\n                        {repo.map((val)=>{\r\n                            <Card title={val.name} desc={val.desc} link={val.html_url} />\r\n                        })}\r\n              </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    </>);\r\n}\r\nexport default Project"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB;AACA,SAAQC,OAAO,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC7B,MAAMC,OAAO,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAGC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACrCD,SAAS,CAAC,MAAM;IACTY,WAAW,EAAE;EACpB,CAAC,EAAC,EAAE,CAAC;EACL,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIC,QAAQ,GAAI,MAAMV,OAAO,EAAE;IAC/BQ,OAAO,CAACE,QAAQ,CAAC;EACrB,CAAC;EACD,oBAAQR,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACRT,OAAA;MAAKU,SAAS,EAAC,aAAa;MAAAD,QAAA,eACxBT,OAAA;QAAAS,QAAA,EAAI;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB,eACNd,OAAA;MAAKU,SAAS,EAAC,OAAO;MAAAD,QAAA,eAClBT,OAAA;QAAKU,SAAS,EAAC,KAAK;QAAAD,QAAA,eAChBT,OAAA;UAAKU,SAAS,EAAC,gBAAgB;UAAAD,QAAA,eAC3BT,OAAA;YAAKU,SAAS,EAAC,UAAU;YAAAD,QAAA,EAChBJ,IAAI,CAACU,GAAG,CAAEC,GAAG,IAAG;cACb,aAAAhB,OAAA,CAACH,IAAI;gBAACoB,KAAK,EAAED,GAAG,CAACE,IAAK;gBAACC,IAAI,EAAEH,GAAG,CAACG,IAAK;gBAACC,IAAI,EAAEJ,GAAG,CAACK;cAAS;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAG;YACjE,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEJ;EAAA,gBACH;AACP,CAAC;AAAAV,EAAA,CA1BKD,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AA2Bb,eAAeA,OAAO;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}